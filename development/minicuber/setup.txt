environment setup:
conda create -n minicuber python=3.10 gdal cartopy -c conda-forge
conda activate minicuber
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
pip install scipy matplotlib seaborn netCDF4 xarray zarr dask shapely pillow pandas s3fs fsspec boto3 psycopg2 pystac-client stackstac==0.4.4 planetary-computer rasterio[s3] rioxarray odc-algo segmentation-models-pytorch folium ipykernel ipywidgets sen2nbar gcsfs
pip install earthnet-minicuber


changes to scripts:
(earthnet-minicuber/providers/ - all scripts requiring epsg)
replace: epsg = metadata["proj:epsg"]
with: 
            if "proj:epsg" in metadata:
                epsg = metadata["proj:epsg"]
            else:
                epsg = metadata["proj:code"].split(":")[-1]
                epsg = int(epsg)


(earthnet-minicuber/providers/esawc)
replace: stack["band"] = ["lc"] 
with:
            stack = stack.sel(band="map").expand_dims("band")
            stack = stack.assign_coords(band=["lc"])

(earthnet-minicuber/providers/__init__)
append era5_gcp to the import statement
add "era5gcp": era5gcp.ERA5_GCP to PROVIDERS 
when using the era5gcp provider, use the link: gs://gcp-public-data-arco-era5/ar/full_37-1h-0p25deg-chunk-1.zarr-v3

(sen2nbar/c_factor) 
replace: SOURCE_EPSG = item.properties["proj:epsg"]
with:
    if "proj:epsg" in item.properties:
        SOURCE_EPSG = item.properties["proj:epsg"]
    else:
        SOURCE_EPSG = int(item.properties["proj:code"].split(":")[-1])


(earthnet-minicuber/minicuber)
add the following code on line 232 
            cube = cube.drop_duplicates(dim='time').sortby('time')


bypassing SSL errors when accessing cloud datasets:
1. download the NRCan root certificate as a crt file 
2. locate the environemnt's cacert.pem file by running the following terminal commands:
    >python
    >import certifi
    >certifi.where()
    >quit()
3. open both files in a text editor, copy the NRCan root certificate, then paste the certificate at the bottom of the pem file 